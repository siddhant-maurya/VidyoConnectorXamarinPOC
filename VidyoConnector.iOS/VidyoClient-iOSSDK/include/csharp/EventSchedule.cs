// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class EventSchedule{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoEventSchedule reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbyDayNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbyMonthNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbyMonthDayNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbySetPosNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbyWeekNumNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetbyYearDayNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetcountNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetdurationNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetendTimeNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGeteventIdNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetfrequencyNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetintervalNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetstartTimeNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetuntilNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoEventScheduleGetweekStartDayNative(IntPtr obj);

		public String byDay;
		public String byMonth;
		public String byMonthDay;
		public String bySetPos;
		public String byWeekNum;
		public String byYearDay;
		public String count;
		public String duration;
		public String endTime;
		public String eventId;
		public String frequency;
		public String interval;
		public String startTime;
		public String until;
		public String weekStartDay;
		public EventSchedule(IntPtr obj){
			objPtr = obj;

			byDay = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbyDayNative(objPtr));
			byMonth = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbyMonthNative(objPtr));
			byMonthDay = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbyMonthDayNative(objPtr));
			bySetPos = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbySetPosNative(objPtr));
			byWeekNum = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbyWeekNumNative(objPtr));
			byYearDay = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetbyYearDayNative(objPtr));
			count = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetcountNative(objPtr));
			duration = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetdurationNative(objPtr));
			endTime = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetendTimeNative(objPtr));
			eventId = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGeteventIdNative(objPtr));
			frequency = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetfrequencyNative(objPtr));
			interval = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetintervalNative(objPtr));
			startTime = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetstartTimeNative(objPtr));
			until = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetuntilNative(objPtr));
			weekStartDay = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoEventScheduleGetweekStartDayNative(objPtr));
		}
	};
}
