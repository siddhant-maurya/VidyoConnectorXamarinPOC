// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class LocalCamera{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoLocalCamera reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoLocalCameraAddToLocalRendererNative(IntPtr c, IntPtr localRenderer);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraAddToRemoteRendererNative(IntPtr c, IntPtr remoteRenderer);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraAllowRemoteCameraControlNative(IntPtr c, Boolean allow);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalCameraConstructCopyNative(IntPtr other);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraControlPTZNative(IntPtr c, int pan, int tilt, int zoom);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalCameraDestructNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraGetBacklightCompensationNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I4)]
		private static extern LocalCameraTradeOffProfile VidyoLocalCameraGetFramerateTradeOffProfileNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalCameraGetIdNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalCameraGetNameNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I4)]
		private static extern LocalCameraPosition VidyoLocalCameraGetPositionNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalCameraGetPreviewLabelNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I4)]
		private static extern LocalCameraTradeOffProfile VidyoLocalCameraGetResolutionTradeOffProfileNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraGetVideoCapabilitiesNative(IntPtr c, IntPtr capabilities);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraIsControlDigitalNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraIsPausedNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraIsSuspendedNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraRemoveFromLocalRendererNative(IntPtr c, IntPtr localRenderer);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraRemoveFromRemoteRendererNative(IntPtr c, IntPtr remoteRenderer);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalCameraResumeNative(IntPtr c);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetAspectRatioConstraintNative(IntPtr c, uint aspectRatioWidth, uint aspectRatioHeight);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetBacklightCompensationNative(IntPtr c, Boolean backlightCompensation);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetBoundsConstraintNative(IntPtr c, uint minWidth, uint minHeight, uint maxWidth, uint maxHeight, ulong maxFrameInterval, ulong minFrameInterval, uint aspectRatioWidth, uint aspectRatioHeight, uint temporalSpatialTradeOff);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetCapabilitiesConstraintNative(IntPtr c, IntPtr capabilities, uint temporalSpatialTradeOff);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetConstraintsNative(IntPtr c, uint minWidth, uint minHeight, uint maxWidth, uint maxHeight, uint maxFrameInterval, uint minFrameInterval, uint aspectRatioWidth, uint aspectRatioHeight, uint temporalSpatialTradeOff, IntPtr capabilities);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalCameraSetControlDigitalNative(IntPtr c, Boolean digital);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetFramerateTradeOffProfileNative(IntPtr c, [MarshalAs(UnmanagedType.I4)]LocalCameraTradeOffProfile profile);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetMaxConstraintNative(IntPtr c, uint width, uint height, ulong frameInterval);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetNudgeTimesNative(IntPtr c, ulong panTime, ulong tiltTime, ulong zoomTime);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetPositionInLocalRendererNative(IntPtr c, IntPtr localRenderer, int x, int y, uint width, uint height, ulong frameInterval);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetPreviewLabelNative(IntPtr c, IntPtr previewLabel);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraSetResolutionTradeOffProfileNative(IntPtr c, [MarshalAs(UnmanagedType.I4)]LocalCameraTradeOffProfile profile);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalCameraSetTargetBitRateNative(IntPtr c, uint bitRate);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalCameraShowCameraControlNative(IntPtr c, Boolean show);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoLocalCameraGetUserDataNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoLocalCameraSetUserDataNative(IntPtr obj, IntPtr userData);

		public enum LocalCameraPosition{
			LocalcamerapositionUnknown,
			LocalcamerapositionFront,
			LocalcamerapositionBack
		}
		public enum LocalCameraTradeOffProfile{
			LocalcameratradeoffprofileHigh,
			LocalcameratradeoffprofileMedium,
			LocalcameratradeoffprofileLow
		}
		public LocalCamera(IntPtr other){
			objPtr = VidyoLocalCameraConstructCopyNative(other);
			VidyoLocalCameraSetUserDataNative(objPtr, GCHandle.ToIntPtr(GCHandle.Alloc(this, GCHandleType.Weak)));
		}
		~LocalCamera(){
			if(objPtr != IntPtr.Zero){
				VidyoLocalCameraSetUserDataNative(objPtr, IntPtr.Zero);
				VidyoLocalCameraDestructNative(objPtr);
			}
		}
		public ulong AddToLocalRenderer(LocalRenderer localRenderer){

			ulong ret = VidyoLocalCameraAddToLocalRendererNative(objPtr, (localRenderer != null) ? localRenderer.GetObjectPtr():IntPtr.Zero);

			return ret;
		}
		public Boolean AddToRemoteRenderer(RemoteRenderer remoteRenderer){

			Boolean ret = VidyoLocalCameraAddToRemoteRendererNative(objPtr, (remoteRenderer != null) ? remoteRenderer.GetObjectPtr():IntPtr.Zero);

			return ret;
		}
		public Boolean AllowRemoteCameraControl(Boolean allow){

			Boolean ret = VidyoLocalCameraAllowRemoteCameraControlNative(objPtr, allow);

			return ret;
		}
		public Boolean ControlPTZ(int pan, int tilt, int zoom){

			Boolean ret = VidyoLocalCameraControlPTZNative(objPtr, pan, tilt, zoom);

			return ret;
		}
		public Boolean GetBacklightCompensation(){

			Boolean ret = VidyoLocalCameraGetBacklightCompensationNative(objPtr);

			return ret;
		}
		public LocalCameraTradeOffProfile GetFramerateTradeOffProfile(){

			LocalCameraTradeOffProfile ret = VidyoLocalCameraGetFramerateTradeOffProfileNative(objPtr);

			return ret;
		}
		public String GetId(){

			IntPtr ret = VidyoLocalCameraGetIdNative(objPtr);

			return (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(ret);
		}
		public String GetName(){

			IntPtr ret = VidyoLocalCameraGetNameNative(objPtr);

			return (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(ret);
		}
		public LocalCameraPosition GetPosition(){

			LocalCameraPosition ret = VidyoLocalCameraGetPositionNative(objPtr);

			return ret;
		}
		public String GetPreviewLabel(){

			IntPtr ret = VidyoLocalCameraGetPreviewLabelNative(objPtr);

			return (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(ret);
		}
		public LocalCameraTradeOffProfile GetResolutionTradeOffProfile(){

			LocalCameraTradeOffProfile ret = VidyoLocalCameraGetResolutionTradeOffProfileNative(objPtr);

			return ret;
		}
		public Boolean GetVideoCapabilities(List<VideoCapability> capabilities){

			IntPtr nCapabilities = IntPtr.Zero;

			Boolean ret = VidyoLocalCameraGetVideoCapabilitiesNative(objPtr, nCapabilities);

			return ret;
		}
		public Boolean IsControlDigital(){

			Boolean ret = VidyoLocalCameraIsControlDigitalNative(objPtr);

			return ret;
		}
		public Boolean IsPaused(){

			Boolean ret = VidyoLocalCameraIsPausedNative(objPtr);

			return ret;
		}
		public Boolean IsSuspended(){

			Boolean ret = VidyoLocalCameraIsSuspendedNative(objPtr);

			return ret;
		}
		public Boolean RemoveFromLocalRenderer(LocalRenderer localRenderer){

			Boolean ret = VidyoLocalCameraRemoveFromLocalRendererNative(objPtr, (localRenderer != null) ? localRenderer.GetObjectPtr():IntPtr.Zero);

			return ret;
		}
		public Boolean RemoveFromRemoteRenderer(RemoteRenderer remoteRenderer){

			Boolean ret = VidyoLocalCameraRemoveFromRemoteRendererNative(objPtr, (remoteRenderer != null) ? remoteRenderer.GetObjectPtr():IntPtr.Zero);

			return ret;
		}
		public void Resume(){

			VidyoLocalCameraResumeNative(objPtr);
		}
		public Boolean SetAspectRatioConstraint(uint aspectRatioWidth, uint aspectRatioHeight){

			Boolean ret = VidyoLocalCameraSetAspectRatioConstraintNative(objPtr, aspectRatioWidth, aspectRatioHeight);

			return ret;
		}
		public Boolean SetBacklightCompensation(Boolean backlightCompensation){

			Boolean ret = VidyoLocalCameraSetBacklightCompensationNative(objPtr, backlightCompensation);

			return ret;
		}
		public Boolean SetBoundsConstraint(uint minWidth, uint minHeight, uint maxWidth, uint maxHeight, ulong maxFrameInterval, ulong minFrameInterval, uint aspectRatioWidth, uint aspectRatioHeight, uint temporalSpatialTradeOff){

			Boolean ret = VidyoLocalCameraSetBoundsConstraintNative(objPtr, minWidth, minHeight, maxWidth, maxHeight, maxFrameInterval, minFrameInterval, aspectRatioWidth, aspectRatioHeight, temporalSpatialTradeOff);

			return ret;
		}
		public Boolean SetCapabilitiesConstraint(List<VideoCapability> capabilities, uint temporalSpatialTradeOff){

			IntPtr nCapabilities = IntPtr.Zero;

			Boolean ret = VidyoLocalCameraSetCapabilitiesConstraintNative(objPtr, nCapabilities, temporalSpatialTradeOff);

			return ret;
		}
		public Boolean SetConstraints(uint minWidth, uint minHeight, uint maxWidth, uint maxHeight, uint maxFrameInterval, uint minFrameInterval, uint aspectRatioWidth, uint aspectRatioHeight, uint temporalSpatialTradeOff, List<VideoCapability> capabilities){

			IntPtr nCapabilities = IntPtr.Zero;

			Boolean ret = VidyoLocalCameraSetConstraintsNative(objPtr, minWidth, minHeight, maxWidth, maxHeight, maxFrameInterval, minFrameInterval, aspectRatioWidth, aspectRatioHeight, temporalSpatialTradeOff, nCapabilities);

			return ret;
		}
		public void SetControlDigital(Boolean digital){

			VidyoLocalCameraSetControlDigitalNative(objPtr, digital);
		}
		public Boolean SetFramerateTradeOffProfile(LocalCameraTradeOffProfile profile){

			Boolean ret = VidyoLocalCameraSetFramerateTradeOffProfileNative(objPtr, profile);

			return ret;
		}
		public Boolean SetMaxConstraint(uint width, uint height, ulong frameInterval){

			Boolean ret = VidyoLocalCameraSetMaxConstraintNative(objPtr, width, height, frameInterval);

			return ret;
		}
		public Boolean SetNudgeTimes(ulong panTime, ulong tiltTime, ulong zoomTime){

			Boolean ret = VidyoLocalCameraSetNudgeTimesNative(objPtr, panTime, tiltTime, zoomTime);

			return ret;
		}
		public Boolean SetPositionInLocalRenderer(LocalRenderer localRenderer, int x, int y, uint width, uint height, ulong frameInterval){

			Boolean ret = VidyoLocalCameraSetPositionInLocalRendererNative(objPtr, (localRenderer != null) ? localRenderer.GetObjectPtr():IntPtr.Zero, x, y, width, height, frameInterval);

			return ret;
		}
		public Boolean SetPreviewLabel(String previewLabel){

			IntPtr nPreviewLabel = MarshalPtrToUtf8.GetInstance().MarshalManagedToNative(previewLabel ?? string.Empty);
			Boolean ret = VidyoLocalCameraSetPreviewLabelNative(objPtr, nPreviewLabel);
			Marshal.FreeHGlobal(nPreviewLabel);

			return ret;
		}
		public Boolean SetResolutionTradeOffProfile(LocalCameraTradeOffProfile profile){

			Boolean ret = VidyoLocalCameraSetResolutionTradeOffProfileNative(objPtr, profile);

			return ret;
		}
		public void SetTargetBitRate(uint bitRate){

			VidyoLocalCameraSetTargetBitRateNative(objPtr, bitRate);
		}
		public Boolean ShowCameraControl(Boolean show){

			Boolean ret = VidyoLocalCameraShowCameraControlNative(objPtr, show);

			return ret;
		}
	};
}
